<template>
	<view>
		<cu-custom bgColor="bg-gradual-blue" :isBack="true">
				<block slot="content">卡板挪库位</block>
		</cu-custom>
		<!-- ===卡板指定库位扫描=== -->
		<form>
		    <view ref="elForm" class="elForm" >
		   	<view  class="cu-form-group border-top">
		   		<view class="title">卡板号:</view>
		   		<input v-model="formItem.cardBoardNo" @blur="getCardBoardNoInfo" placeholder="请输入或扫描卡板号" name="input"></input>
		   		<button @click="turnOnScanCode('cardBoardNo')" class='cu-btn bg-green shadow'>扫描</button>
		   	</view>
		   	<view class="cu-form-group border-top">
		   		<view class="title">库位:</view>
		   		<input ref="kuWeiInput" v-model="formItem.kuNo"  placeholder="请输入或扫描库位" name="input" @blur="getKuNoInfo"></input>
		   		<button @click="turnOnScanCode('kuNo')" class='cu-btn bg-green shadow' :disabled="cardBoardNoInfoData.length == 0 ">扫描</button>
		   	</view>
			<view class="cu-form-group border-top">
				<view class="title">原库位:</view>
				<input  :disabled="true" ref="kuWeiInput" v-model="formItem.originalKuNo"  placeholder="原库位" name="input"></input>
			
			</view>
			<!-- <view class="cu-form-group border-top">
				<view class="cl-tableDesc">纸板明细清单</view>
			</view> -->
		   </view>
		</form>
		<view class="bingStorage-zTable">
			<zTable :tableHeight="tableHeight"  :showLoading="false" :emptyText="errorContent" :tableData="cardBoardNoInfoData" :columns="cardBoardNoInfoColumns"></zTable>
		</view>
		 <alertBox ref='alertBox' :msgContent="msgContent" :toShowModal="toShowModal" @cancelModal="cancelModal" @comfirmModal="comfirmModal"></alertBox>
		<!-- 操作 按钮 -->
				<view ref="elBtn"  class="elBtn margin-text-center">
					<view  class="flex  p-xs ">
						
						<view  class="flex-twice radius">
							
						</view> 
						<view  class="flex-sub radius">
								
								</view>
								<view  class="flex-twice  radius"> 
								<button @click="preSubmitDataList()" :loading="false" :disabled=" formItem.cardBoardNo=='' || formItem.kuNo=='' || !kuNoExists" type="" class="cu-btn block bg-green  lg" > 提交</button>
								</view>
						
					</view>
		</view>
	</view>
</template>

<script>
	import alertBox from '@/components/color-ui-dialog/color-ui-dialog.vue'
	import zTable from "@/components/z-table/z-table.vue"
	import uniIcon from "@/components/uni-icon/uni-icon.vue"
	import searchForm from '@/components/searchForm/searchDataList.vue.vue'
	//纸板入库卡板、工单扫描
	import baseMixin from '@/mixins'
	import {mapActions} from 'vuex'
	import uniPopup from "@/components/uni-popup/uni-popup.vue"
	const defaultformItem={
					cardBoardNo:'',//卡板号
					kuNo:'',//库位号
					originalKuNo:'' ,//原库位
				}
	export default {
		name:'inStorage',//纸板入库卡板、工单扫描
		mixins:[baseMixin],
		components:{zTable,searchForm,uniPopup,uniIcon,alertBox},
		data() {
			return {
				kuNoExists:false,
				toShowModal:false,// 是否显示确认弹框
				msgContent:'',//弹框内容信息
				scanType:'',//当前扫描类型
				tableHeight:400,//表格高度
				errorContent:'暂无数据',//数据加载中...
				cardBoardNoInfoData:[],
				cardBoardNoInfoColumns: [{
					key: 'ap_OrderNo',
					title: '工单号',
					width: 200
				}, 
				{
					key: 'ap_ArtID',
					title: '纸质',
					width: 200
				}, 
				{
					key: 'ap_Size',
					title: '规格',
					width: 200
				}, 
				{
					key: 'ap_Qty',
					title: '数量',
					width: 145
				},
				{
					key: 'ap_CustName',
					title: '客户',
					width: 400
				}],
				formItem:Object.assign({},defaultformItem)
			}
		},
		// #ifdef H5
		mounted () {
			this.messageRegister()
			this.getTableHeight()
		},
		  
		// #endif
		// #ifndef H5
		onReady () {
			this.messageRegister()
			this.getTableHeight()
		},
		// #endif
		methods: {
			//查询卡板信息列表BY 卡板号
			getCardBoardNoInfo() {
				this.cardBoardNoInfoData= []
				if (this.formItem.cardBoardNo == '') {
					uni.showToast({
						title:'请输入或扫描卡板号',
						icon:'none',
						duration:2000
					})
					return;
				}
				
				let data = {
					procName:'spGetCardInfoForAPP',
					params:{
						CardNo:this.formItem.cardBoardNo,
						Type:'B'
					}
				}
				this.dataIsLoadding = true;
				this.getExecuteDropDownDetailsAction(data).then(res => {
					//debugger
					if (res && res.list && res.list.length > 0) {
						this.cardBoardNoInfoData = res.list
						this.formItem.originalKuNo=this.cardBoardNoInfoData[0].ap_StationNo
					}else{
						uni.showToast({
							title:'没有该卡板对应的数据',
							icon:'none',
							duration:2000
						})
					}
					this.dataIsLoadding = false;
					
				}).catch(err => {
					uni.showToast({
						title:'获取数据失败:' + err,
						icon:'none',
						duration:2000
					})
					this.dataIsLoadding = false;
				})
			},
			//确认弹框-提交工单列表信息
			comfirmModal(val){
				this.toShowModal =false
				switch (this.currentAction){
					case 'preSubmitDataList':
					     this.submitAddList()
						break;			
					default:
						break;
				}
			},
			// 取消弹框
			cancelModal(val){
				this.toShowModal =false
				// switch (this.currentAction){
				// 	case 'cardBoardNotNull':
				// 	    this.formItem.cardBoardNo =this.tempScanCode
				// 	    this.getCardBoardNoInfo()
				// 		break;			
				// 	default:
				// 		break;
				// }
			},
			// 准备--提交提交工单列表信息
			preSubmitDataList(){
				this.currentAction='preSubmitDataList'
				this.msgContent ='确定提交数据吗?'
				this.toShowModal =true
			},
			// 提交 卡板挪库位 工单信息列表 
			submitAddList(){
			  let params = {
				  UserID:this.$store.getters.userInfo_getters,
				  cardNo:this.formItem.cardBoardNo,
				  newStationNo:this.formItem.kuNo,
				  StationNo:this.formItem.originalKuNo,
				  Type:'A',
				  list: this.cardBoardNoInfoData
			  }
			  this.$store.dispatch('setStationNoAction',params).then(res=>{
				  // 清空数据
				  this.formItem = Object.assign({},defaultformItem)
				  this.cardBoardNoInfoData =[]
				  uni.showToast({
				  	title:'操作成功',
				  	icon:'none',
				  	duration:2000
				  })
			  }).catch(err=>{
					uni.showToast({
						title:'操作失败:'+err,
						icon:'none',
						duration:2000
					})
			  })
			},
			async getTableHeight(){
						 // debugger
						  let _self=this
						  let tempHeight =  _self.setTableHeight()
						  let otherHeight= await _self.getOtherContentHeight("elForm") 
						  let otherHeight2 = await _self.getOtherContentHeight("elBtn")
						  if(otherHeight!=null && otherHeight2!=null){
						  	
						  	_self.tableHeight =tempHeight-otherHeight-otherHeight2-20
						  }
					
						},
				//映射方法
			...mapActions(['setCardBoardNorwayAction','getExecuteDropDownDetailsAction','getExistStorehouseAction']),
				//页面通讯,事件注册
				messageRegister(){
				  // 初始化数据
				},

			   //===打开扫描===
				turnOnScanCode(type){
					this.scanType =type
					let _self =this
					// 调起条码扫描
					uni.scanCode({
					    scanType: 'barCode', // 固定条形码
					    success: function (res) {
					        console.log('条码内容：' + res.result);
							switch (type){
								case 'cardBoardNo': 
								    //卡板号
								    _self.formItem.cardBoardNo = res.result
									_self.getCardBoardNoInfo() //工单号验证查询
									break;
								case 'kuNo': 
									    //库位号
									    _self.formItem.kuNo = res.result
										//_self.getWorkNoInfo() //工单号验证查询
										break;
								default:
									break;
							}
						
					    }
					});
				},getKuNoInfo(){
					//getExistStorehouseAction
					this.kuNoExists = false;
					if(this.formItem.kuNo == ''){
						uni.showToast({
							title:'库位不能为空',
							icon:'none',
							duration:2000
						})
						return;
					}else if(this.formItem.kuNo == this.formItem.originalKuNo){
						uni.showToast({
							title:'新库位与原库位一致',
							icon:'none',
							duration:2000
						});
						this.formItem.kuNo = ''; 
						return;
					}
					let _self = this;
					this.getExistStorehouseAction(this.formItem.kuNo).then(res=>{
						
						_self.kuNoExists = res;
						if(!res){
							uni.showToast({
								title:'库位不存在,请重新输入',
								icon:'none',
								duration:2000
							});
							_self.formItem.kuNo = ''; 
						}
					})
				}
			
		}
	}
</script>

<style>
	.margin-text-center{
		text-align: center;
		margin: 20rpx;
	}
	.border-top{
		  border-top: 1px solid #eee;
	}
.cu-form-group .title {
		min-width: calc(4em + 15px);
	}
</style>
