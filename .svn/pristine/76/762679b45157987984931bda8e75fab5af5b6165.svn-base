<template>
	<view>
		<cu-custom @BackPageEvent="BackPageEvent" bgColor="bg-gradual-blue" :isBack="true"><block slot="content">采购单详情</block></cu-custom>
		<view>
			<view class="grid-warp">
				<view class="grid-title">
				  {{detailItems.poerName}}-{{detailItems.vendName}}
				</view>
				<view class="grid-body">
					<view class="grid-flex padding-10">
						<view>
							<text>单号:{{ detailItems.sp_No }}</text>
						</view>
						<view>
							<text>日期:{{ formatData(detailItems.sp_PODate) }}</text>
						</view>
					</view>
					<view class="grid-flex padding-10">
						<view>
							<text>税率:{{detailItems.sp_Rate}}%</text>
						</view>
						<view>
							<text>币别:{{detailItems.sp_Coin}}</text>
						</view>
					</view>
				</view>

			</view>
			
			<view class="grid-warp">
					<view class="grid-title">
						采购单详情
					</view>
					   <block v-for="(item,index) in currentItemDetailList" :key="index">
							<view class="grid-body">
								<view class="grid-flex padding-10">
									<view>
										<text>品名:{{item.kindName}}</text>
									</view>
									<view>
										<text>纸宽:{{item.si_Width}}</text>
									</view>
								</view>
								<view class="grid-flex padding-10">
									<view>
										<text>克重:{{item.si_Gram}}</text>
									</view>
									<view>
										<text>级别:{{item.gradeName}}</text>
									</view>
								</view>
								<view class="grid-flex padding-10">
									<view>
										<text>卷数:{{item.si_Coil}}</text>
									</view>
									<view>
										<text>价格(含税):￥{{item.si_TaxPrice}}</text>
									</view>
								</view>
							</view>
							<!-- <view class="marginBottom10"></view> -->
						</block>
				</view>
		</view>

		
<!-- =====对话框-弹出=====  -->	
		<view class="cu-modal" :class="idShowModal ? 'show' : ''">
			<view class="cu-dialog">
				<view class="cu-bar bg-white justify-end">
					<view class="content">{{ dialogTitle }}</view>
					<view class="action" @tap="cancelDialog"><text class="cuIcon-close text-red"></text></view>
				</view>
				<view class="text-left padding-sm"><textarea maxlength="60" @input="textareaAInput" placeholder="请输入审批说明..."></textarea></view>
				<view class="cu-bar bg-white justify-end">
					<view class="action">
						<button class="cu-btn line-green text-green" @tap="cancelDialog">取消</button>
						<button class="cu-btn bg-green margin-left" @tap="okDialog">确定</button>
					</view>
				</view>
			</view>
		</view>
<!-- =====对话框-弹出===== end -->
        <view class="marginTop50"></view>
		<view class="button-group cu-bar bg-white tabbar border shop">
			<view class="btn-group">
				<button :disabled="btn_disabled" @click="openDialog('resolve')" class="cu-btn bg-blue round shadow-blur lg">同意</button>
				<button :disabled="btn_disabled" @click="openDialog('reject')" class="cu-btn bg-red round shadow-blur lg">驳回</button>
			</view>
		</view>
	</view>
</template>

<script>
import * as eventType from '@/libs/eventBusType'
import baseMixin from '@/mixins';
import { mapActions } from 'vuex';
//import zTable from "@/components/z-table/z-table.vue"
export default {
	name: 'originalPaperDetail', //原纸采购详情
	mixins: [baseMixin],
	components: {},
	data() {
		return {
			btn_disabled: false,
			dialogTitle: '审批说明',
			idShowModal: false,
			dataSourceList: [], //数据源
			currentIndex: 0,
			currentItemDetailList:{},//当前原纸详细列表
			detailItems: {},
			dialogType: 'reject', //对话框类型 resolve:同意,reject:驳回
			formItems: {
				poId: '',
				approvalExplain: '',
				approveState: 0
			},
			
		};
	},
	// #ifdef H5
	mounted() {
		this.loadData();
	},
	// #endif
	// #ifndef H5
	onReady() {
		this.loadData();
	},
	// #endif
	onLoad(option) {
		//uni-app内置：option为object类型，会序列化上个页面传递的参数
		this.currentIndex = option.id;
		
	},
	methods: {
		...mapActions(['approvePOAction','searchPODetailAction']),
		//点击返回时-回调事件
		BackPageEvent() {
			//审核成功后，才删除对应的数据
			if(this.btn_disabled){
				//触发全局的自定事件。附加参数都会传给监听器回调。
				 uni.$emit(eventType.BackToPage_Refresh,{itemIndex:this.currentIndex})
			}
			
		},
		//查询当前原纸详细列表
		searchCurrentItemDetailList(){
			let params ={
				poId: this.formItems.poId
			}
			this.searchPODetailAction(params).then(res=>{
				this.currentItemDetailList = res.data
				console.warn('this.currentItemDetailList:'+JSON.stringify(res))
			}).catch(err=>{
				uni.showToast({
					title: '查询详细列表失败 err:' + err,
					icon: 'none',
					duration: 2000
				});
			})
		},
		//提交审批
		submitContent() {
			this.btn_disabled = false;
			let params = this.formItems;
			this.approvePOAction(params)
				.then(res => {
					uni.showToast({
						title: '审核成功',
						duration: 2000
					});
					this.btn_disabled = true;
				})
				.catch(err => {
					uni.showToast({
						title: '审核失败 err:' + err,
						icon: 'none',
						duration: 2000
					});
				});
		},
		//打开对话框，提交备注
		openDialog(type) {
			//对话框类型 resolve:同意,reject:驳回
			if (type === 'resolve') {
				this.dialogTitle = '审批说明(同意)';
				this.formItems.approveState = 1;
			} else {
				this.dialogTitle = '审批说明(驳回)';
				this.formItems.approveState = 0;
			}
			this.dialogType = type;
			this.idShowModal = true;
		},
		//备注填写-回调事件
		textareaAInput(e) {
			//this.textareaAValue = e.detail.value
			this.formItems.approvalExplain = e.detail.value;
		},
		//确认对话框-回调事件
		okDialog() {
			//审核不通过的，需要填写备注内容
			if (this.dialogType === 'reject' && this.formItems.approvalExplain === '') {
				this.idShowModal = false;
				uni.showToast({
					title: '请填写备注内容！',
					icon: 'none',
					duration: 2000
				});
			} else {
				this.submitContent();
				this.idShowModal = false;
			}
		},
		//取消对话框-回调事件
		cancelDialog() {
			this.idShowModal = false;
		},
		//加载数据-获取==参数==对应下标-数据
		loadData() {
			
			this.dataSourceList = this.$store.getters.originalPapersList_getter;
			
			this.detailItems = this.dataSourceList[this.currentIndex];
			
			if (this.detailItems != null) {
				this.formItems.poId = this.detailItems.ID1;
				this.formItems.approvalExplain = '';
				
				this.searchCurrentItemDetailList() 
			}
		}
	}
};
</script>

<style>
.marginBottom10{
			margin-bottom: 10px;
			height: 1px;
			width: 100%;
		}
.marginTop50{
	margin-top: 50px;
	height: 1px;
	width: 100%;
}
.card {
	width: 90%;
	margin-left: 5%;
	border-radius: 10rpx;
	padding: 30rpx;
}
.status {
}
.grid-title {
	display: flex;
	justify-content: space-between;
}
.text-price {
	color: #4aecdb;
	font-size: 50rpx;
}
.button-group {
	display: flex;
	position: fixed;
	bottom: 0;
	width: 100%;
}


</style>
