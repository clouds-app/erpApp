<template>
	<view>
		<cu-custom bgColor="bg-gradual-blue" :isBack="true">
				<block slot="content">纸板出入库</block>
		</cu-custom>
		<scroll-view scroll-x class="bg-white nav">
			<view class="flex text-center">
				<view class="cu-item flex-sub" :class="0==TabCur?'text-orange cur':''"  @tap="tabSelect" data-id="0">
					入ㅤ库
				</view>
				<view class="cu-item flex-sub" :class="1==TabCur?'text-orange cur':''"  @tap="tabSelect" data-id="1">
					寻ㅤ货
				</view>
				<view class="cu-item flex-sub" :class="2==TabCur?'text-orange cur':''"  @tap="tabSelect" data-id="2">
					出仓扫描
				</view>
			</view>
		</scroll-view>
		<!-- ===入 库=== -->
		<form v-show="0==TabCur">
			<view class="cu-form-group border-top">
				<view class="title">条ㅤ码:</view>
				<input v-model="paperInFormItems.instruct" @blur="barCodeBlur"  placeholder="请输入条形码" name="input"></input>
				<button @click="turnOnScanCode('in')" class='cu-btn bg-green shadow'>扫描</button>
			</view>
			<view class="cu-form-group">
				<view class="title">仓ㅤ位:</view>
				<input v-model="paperInFormItems.station"  placeholder="请输入仓位" name="input"></input>
			</view>
			<view class="cu-form-group">
				<view class="title">工单号:</view>
				<input :disabled="true" v-model="paperInFormItems.fOrderNo"  placeholder="请输入工单号" name="input"></input>
			<!-- 	<button class='cu-btn bg-green shadow'>扫描</button> -->
			</view>
			<view class="flex border-top">
				<view class="flex-sub">
					<view class="cu-form-group">
						<view class="title">板ㅤ号:</view>
						<input :disabled="true" v-model="paperInFormItems.fDNum" placeholder="请输入板号" name="input"></input>
					</view>
				</view>
				<view class="flex-sub">
					<view class="cu-form-group">
						<view class="title">数ㅤ量:</view>
						<input :disabled="true" v-model="paperInFormItems.fQty" placeholder="请输入数量" name="input"></input>
					</view>
				</view>
			</view>
			<view class="flex border-top">
				<view class="flex-sub">
					<view class="cu-form-group">
						<view class="title">线ㅤ别:</view>
						<input :disabled="true" v-model="paperInFormItems.line" placeholder="请输入线别" name="input"></input>
					</view>
				</view>
				<view class="flex-sub">
					<view class="cu-form-group">
						<view class="title">班ㅤ别:</view>
						<input :disabled="true" v-model="paperInFormItems.group" placeholder="请输入班别" name="input"></input>
					</view>
				</view>
			</view>
			<view class="cu-form-group border-top">
				<textarea maxlength="-1"   v-model="paperInFormItems.desc" placeholder="请输入备注"></textarea>
			</view>
			<view class="margin-text-center">
				<button @click="paprtIn" :loading="false" :disabled="false" type="" class="cu-btn block bg-blue margin-tb-sm lg" > 入仓</button>
			           <!-- <button type="primary" @click="paprtIn">入仓</button> -->
			
			 </view>
			<!-- <view class="cu-form-group">
				<view class="title">验证码</view>
				<input placeholder="输入框带个按钮" name="input"></input>
				<button class='cu-btn bg-green shadow'>验证码</button>
			</view> -->
			<!-- <view class="cu-form-group">
				<view class="title">手机号码</view>
				<input placeholder="输入框带标签" name="input"></input>
				<view class="cu-capsule radius">
					<view class='cu-tag bg-blue '>
						+86
					</view>
					<view class="cu-tag line-blue">
						中国大陆
					</view>
				</view>
			</view> -->
		</form>
		
		<!-- ===寻 货=== -->
		<form v-show="1==TabCur">
			<view class="bodyContentHeight">
				<view class="cu-form-group border-top">
					<view class="title">工单号:</view>
					<input v-model="findGoodsItem.fOrderNo" placeholder="请输入工单号" name="input"></input>
					<button  @click="turnOnScanCode('search')" class='cu-btn bg-green shadow'>扫描</button>
				</view>
			</view>
			
			<zTable :tableHeight="tableHeight"  :showLoading="false" :emptyText="errorContent" :tableData="findGoodsTableDataItems" :columns="findGoodsColumns"></zTable>
			<view class="margin-text-center">
				<button @click="findGoods()" :loading="false" :disabled="false" type="" class="cu-btn block bg-blue margin-tb-sm lg" > 查ㅤ询</button>
			           <!-- <button @click="findGoods()" type="primary">查ㅤ询</button> -->
			
			 </view>
		</form>
		<!--=== 出仓扫描 ===-->
		<form v-show="2==TabCur">
		<view class="bodyContentHeight2">
			<view class="cu-form-group border-top">
				<view class="title">车ㅤ次:</view>
				<input v-model="paperOutItem.batch" placeholder="请输入车次" name="input"></input>
			</view>
			<view class="cu-form-group">
				<view class="title">工单号:</view>
				<input v-model="paperOutItem.fOrderNo" placeholder="请输入工单号" name="input"></input>
				<button  @click="turnOnScanCode('out')" class='cu-btn bg-green shadow'>扫描</button>
			</view>
		</view>
			<zTable :tableHeight="tableHeight"  :showLoading="false" :emptyText="errorContent" :tableData="paperOutTableDataItems" :columns="findGoodsColumns"></zTable>
			<view class="margin-text-center">
				ㅤ<button @click="paperOut()" :loading="false" :disabled="false" type="" class="cu-btn block bg-blue margin-tb-sm lg" > 查ㅤ询</button>
			           <!-- <button @click="paperOut()" type="primary">查ㅤ询</button> -->
			
			 </view>
		</form>
		
		
	</view>
</template>

<script>
	import baseMixin from '@/mixins'
	import {mapActions} from 'vuex'
	import zTable from "@/components/z-table/z-table.vue"
	export default {
		name:'paperIn',
		mixins:[baseMixin],
		components:{zTable},
		data() {
			return {
				TabCur: 0,
				scrollLeft: 0,
				dataTableList:[],
				errorContent:'暂无数据',//数据加载中...
				tableHeight:0,//表格高度
				findGoodsTableDataItems: [],
				paperOutTableDataItems: [],
				paperInFormItems: {
					instruct: '', //指令
					station: '', //仓位
					fOrderNo: '', //工单号
					line: '', //线别
					group: '', //班别
					fQty: '', //数量
					fDNum: '', //板号,
					desc: '' //备注
				},
				paperInFormInit: {
					instruct: '', //指令
					station: '', //仓位
					fOrderNo: '', //工单号
					line: '', //线别
					group: '', //班别
					fQty: '', //数量
					fDNum: '', //板号,
					desc: '' //备注
				},
				findGoodsItem: {
					fOrderNo: ''//工单号
				},
				paperOutItem: {
					fOrderNo: '', //工单号
					batch: ''
				},
				findGoodsColumns: [{
					key: 'OrderNo',
					title: '工单号',
					width: 200
				}, 
				{
					key: 'Station',
					title: '仓位',
					width: 200
				}, 
				{
					key: 'FNum',
					title: '板号',
					width: 200
				}, 
				{
					key: 'State',
					title: '状态',
					width: 145
				},],
			}
		},
		// #ifdef H5
		mounted () {
			
		},
		  
		// #endif
		// #ifndef H5
		onReady () {
			
		},
		// #endif
		methods: {
			tabSelect(e) {
				this.TabCur = e.currentTarget.dataset.id;
				this.scrollLeft = (e.currentTarget.dataset.id - 1) * 60
				//debugger
				switch (this.TabCur){
					case 0:
						break;
					case '1':
						this.$nextTick(()=>{
							this.getOtherContentHeight('bodyContentHeight')
							setTimeout(()=>{
								//验证执行,方便个别小程序兼容
								let tempHeight =  this.setTableHeight(true)
								this.tableHeight =tempHeight-130 //特别处理
							},200)
						})
						break;
					case '2':
					this.$nextTick(()=>{
						this.getOtherContentHeight('bodyContentHeight2')
						setTimeout(()=>{
							//验证执行,方便个别小程序兼容
							let tempHeight =  this.setTableHeight(true)
							this.tableHeight =tempHeight-130 //特别处理
						},200)
					})
						break;
					default:
						break;
				}
			},
			//打开扫描
			turnOnScanCode(type){
				let _self =this
				// 调起条码扫描
				uni.scanCode({
				    scanType: 'barCode',
				    success: function (res) {
				       // console.log('条码类型：' + res.scanType);
				        console.log('条码内容：' + res.result);
						switch (type){
							case 'in': //入库
								_self.paperInFormItems.instruct =res.result
								_self.getParamsFromScanCode()
								break;
							case 'out': //出仓
								this.paperOutItem.fOrderNo = res.result
								break;		
							case 'search': //寻货
								this.findGoodsItem.fOrderNo = res.result
								break;	
								
							default:
								break;
						}
					
				    }
				});
			},
			...mapActions(['spScanOrderAction']),
				barCodeBlur() {
					if (this.paperInFormItems.instruct == '') {
						
						uni.showToast({
							title:'请输入或扫描条码',
							icon:'none'
						})
						return;
					}
					this.getParamsFromScanCode()
				},
				//====入库====获取所需参数 从扫描中...
				getParamsFromScanCode(){
					let instruct = this.paperInFormItems.instruct.split('*');
					if (instruct.length < 5) {
						uni.showToast({
							title:'数据解析失败，参数个数不够',
							icon:'none'
						})
						return;
					}
					let data = {
						fOrderNo: instruct[0],
						fDNum: instruct[1],
						fQty: instruct[2],
						line: instruct[3],
						group: instruct[4]
								
					}
					Object.assign(this.paperInFormItems, data);
				},
				//查询数据
				paperInRequest(data) {
					this.errorContent='数据加载中...'
					return new Promise((resolve, reject) => {
						this.spScanOrderAction(data).then(res => {
							resolve(res.list);
						}).catch(err => {
							this.errorContent = '暂无数据';
							uni.showToast({
								title:'获取数据失败:' + err,
								icon:'none'
							})

							reject(err);
						})
					})
				},
				//确认提交===入仓===
				paprtIn() {
					if (this.paperInFormItems.station == '') {
						
						uni.showToast({
							title:'请输入仓位',
							icon:'none'
						})
						return;
					}
					if (
						this.paperInFormItems.fOrderNo == '' ||
						this.paperInFormItems.fQty == '' ||
						this.paperInFormItems.fDNum == '' ||
						this.paperInFormItems.line == '' ||
						this.paperInFormItems.group == ''
					) {
						
						uni.showToast({
							title:'请先扫描完整的指令',
							icon:'none'
						})
						return;
					}
					let data = {
						BarCodeStr: this.paperInFormItems.instruct,
						Station: this.paperInFormItems.station,
						Flag: 0,
						FOrderNo: this.paperInFormItems.fOrderNo,
						FQty: this.paperInFormItems.fQty,
						FDNum: this.paperInFormItems.fDNum,
						FLine: this.paperInFormItems.line,
						FClass: this.paperInFormItems.group,
						Remark: this.paperInFormItems.desc
					}
					//debugger
					this.paperInRequest(data).then(res => {
						if (res && res[0].res == 1) {
							uni.showToast({
								title:'入仓成功'
							})
						} else {
							uni.showToast({
								title:'入仓失败',
								icon:'none',
								duration:2000
							})
						}
					}).catch(err=>{
						uni.showToast({
							title:'入仓失败'+err,
							icon:'none',
							duration:2000
						})
					});
				},
				//====查询====
				findGoods() {
					//寻货
					if (this.findGoodsItem.fOrderNo == '') {
						uni.showToast({
							title:'请输入或扫描工单号',
							icon:'none',
							duration:2000
						})
						return;
					}
					let data = {
						FOrderNo: this.findGoodsItem.fOrderNo,//this.instruct,//????
						BarCodeStr: this.findGoodsItem.fOrderNo,
						Flag: 2
					}
					this.paperInRequest(data).then(res => {
						if (res && res.length > 0) {
							this.findGoodsTableDataItems = res[0].resultList;
						}
					}).catch(err=>{
						uni.showToast({
							title:'暂无数据',
							icon:'none',
							duration:2000
						})
					})
				},
				//====出仓====
				paperOut() {
					if (this.paperOutItem.fOrderNo == '') {
						uni.showToast({
							title:'请输入或扫描工单号',
							icon:'none',
							duration:2000
						})
						return;
					}
					if (this.paperOutItem.batch == '') {
						uni.showToast({
							title:'请输入车次',
							icon:'none',
							duration:2000
						})
						return;
					}
					let data = {
						FOrderNo: this.paperOutItem.fOrderNo,
						BarCodeStr: '',
						Batch: this.paperOutItem.batch,
						Flag: 1
					}
					this.paperInRequest(data).then(res => {
						if (res && res.length > 0) {
							this.paperOutTableDataItems = res.resultList[0];
						}
					}).catch(err=>{
						uni.showToast({
							title:'暂无数据',
							icon:'none',
							duration:2000
						})
					})
				}
			
		}
	}
</script>

<style>
	.margin-text-center{
		text-align: center;
		margin: 20rpx;
	}
	.border-top{
		  border-top: 1px solid #eee;
	}
.cu-form-group .title {
		min-width: calc(4em + 15px);
	}
</style>
